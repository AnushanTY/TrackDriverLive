/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.pickme.events.trip.trip_ended;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class FinalTripFare extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -8412291110731511380L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"FinalTripFare\",\"namespace\":\"com.pickme.events.trip.trip_ended\",\"fields\":[{\"name\":\"promotion\",\"type\":{\"type\":\"record\",\"name\":\"Promotion\",\"fields\":[{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"code\",\"type\":\"string\"},{\"name\":\"discount_amount\",\"type\":\"float\"}]}},{\"name\":\"auto_payment\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"AutoPayment\",\"fields\":[{\"name\":\"type\",\"type\":\"int\"},{\"name\":\"amount\",\"type\":\"float\"}]}}},{\"name\":\"additional_fare\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"AdditionalFare\",\"fields\":[{\"name\":\"code\",\"type\":\"string\"},{\"name\":\"amount\",\"type\":\"float\"}]}}},{\"name\":\"final_trip_fare\",\"type\":\"float\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<FinalTripFare> ENCODER =
      new BinaryMessageEncoder<FinalTripFare>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<FinalTripFare> DECODER =
      new BinaryMessageDecoder<FinalTripFare>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<FinalTripFare> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<FinalTripFare> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<FinalTripFare>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this FinalTripFare to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a FinalTripFare from a ByteBuffer. */
  public static FinalTripFare fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public com.pickme.events.trip.trip_ended.Promotion promotion;
  @Deprecated public java.util.List<com.pickme.events.trip.trip_ended.AutoPayment> auto_payment;
  @Deprecated public java.util.List<com.pickme.events.trip.trip_ended.AdditionalFare> additional_fare;
  @Deprecated public float final_trip_fare;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public FinalTripFare() {}

  /**
   * All-args constructor.
   * @param promotion The new value for promotion
   * @param auto_payment The new value for auto_payment
   * @param additional_fare The new value for additional_fare
   * @param final_trip_fare The new value for final_trip_fare
   */
  public FinalTripFare(com.pickme.events.trip.trip_ended.Promotion promotion, java.util.List<com.pickme.events.trip.trip_ended.AutoPayment> auto_payment, java.util.List<com.pickme.events.trip.trip_ended.AdditionalFare> additional_fare, java.lang.Float final_trip_fare) {
    this.promotion = promotion;
    this.auto_payment = auto_payment;
    this.additional_fare = additional_fare;
    this.final_trip_fare = final_trip_fare;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return promotion;
    case 1: return auto_payment;
    case 2: return additional_fare;
    case 3: return final_trip_fare;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: promotion = (com.pickme.events.trip.trip_ended.Promotion)value$; break;
    case 1: auto_payment = (java.util.List<com.pickme.events.trip.trip_ended.AutoPayment>)value$; break;
    case 2: additional_fare = (java.util.List<com.pickme.events.trip.trip_ended.AdditionalFare>)value$; break;
    case 3: final_trip_fare = (java.lang.Float)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'promotion' field.
   * @return The value of the 'promotion' field.
   */
  public com.pickme.events.trip.trip_ended.Promotion getPromotion() {
    return promotion;
  }

  /**
   * Sets the value of the 'promotion' field.
   * @param value the value to set.
   */
  public void setPromotion(com.pickme.events.trip.trip_ended.Promotion value) {
    this.promotion = value;
  }

  /**
   * Gets the value of the 'auto_payment' field.
   * @return The value of the 'auto_payment' field.
   */
  public java.util.List<com.pickme.events.trip.trip_ended.AutoPayment> getAutoPayment() {
    return auto_payment;
  }

  /**
   * Sets the value of the 'auto_payment' field.
   * @param value the value to set.
   */
  public void setAutoPayment(java.util.List<com.pickme.events.trip.trip_ended.AutoPayment> value) {
    this.auto_payment = value;
  }

  /**
   * Gets the value of the 'additional_fare' field.
   * @return The value of the 'additional_fare' field.
   */
  public java.util.List<com.pickme.events.trip.trip_ended.AdditionalFare> getAdditionalFare() {
    return additional_fare;
  }

  /**
   * Sets the value of the 'additional_fare' field.
   * @param value the value to set.
   */
  public void setAdditionalFare(java.util.List<com.pickme.events.trip.trip_ended.AdditionalFare> value) {
    this.additional_fare = value;
  }

  /**
   * Gets the value of the 'final_trip_fare' field.
   * @return The value of the 'final_trip_fare' field.
   */
  public java.lang.Float getFinalTripFare() {
    return final_trip_fare;
  }

  /**
   * Sets the value of the 'final_trip_fare' field.
   * @param value the value to set.
   */
  public void setFinalTripFare(java.lang.Float value) {
    this.final_trip_fare = value;
  }

  /**
   * Creates a new FinalTripFare RecordBuilder.
   * @return A new FinalTripFare RecordBuilder
   */
  public static com.pickme.events.trip.trip_ended.FinalTripFare.Builder newBuilder() {
    return new com.pickme.events.trip.trip_ended.FinalTripFare.Builder();
  }

  /**
   * Creates a new FinalTripFare RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new FinalTripFare RecordBuilder
   */
  public static com.pickme.events.trip.trip_ended.FinalTripFare.Builder newBuilder(com.pickme.events.trip.trip_ended.FinalTripFare.Builder other) {
    return new com.pickme.events.trip.trip_ended.FinalTripFare.Builder(other);
  }

  /**
   * Creates a new FinalTripFare RecordBuilder by copying an existing FinalTripFare instance.
   * @param other The existing instance to copy.
   * @return A new FinalTripFare RecordBuilder
   */
  public static com.pickme.events.trip.trip_ended.FinalTripFare.Builder newBuilder(com.pickme.events.trip.trip_ended.FinalTripFare other) {
    return new com.pickme.events.trip.trip_ended.FinalTripFare.Builder(other);
  }

  /**
   * RecordBuilder for FinalTripFare instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<FinalTripFare>
    implements org.apache.avro.data.RecordBuilder<FinalTripFare> {

    private com.pickme.events.trip.trip_ended.Promotion promotion;
    private com.pickme.events.trip.trip_ended.Promotion.Builder promotionBuilder;
    private java.util.List<com.pickme.events.trip.trip_ended.AutoPayment> auto_payment;
    private java.util.List<com.pickme.events.trip.trip_ended.AdditionalFare> additional_fare;
    private float final_trip_fare;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.pickme.events.trip.trip_ended.FinalTripFare.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.promotion)) {
        this.promotion = data().deepCopy(fields()[0].schema(), other.promotion);
        fieldSetFlags()[0] = true;
      }
      if (other.hasPromotionBuilder()) {
        this.promotionBuilder = com.pickme.events.trip.trip_ended.Promotion.newBuilder(other.getPromotionBuilder());
      }
      if (isValidValue(fields()[1], other.auto_payment)) {
        this.auto_payment = data().deepCopy(fields()[1].schema(), other.auto_payment);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.additional_fare)) {
        this.additional_fare = data().deepCopy(fields()[2].schema(), other.additional_fare);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.final_trip_fare)) {
        this.final_trip_fare = data().deepCopy(fields()[3].schema(), other.final_trip_fare);
        fieldSetFlags()[3] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing FinalTripFare instance
     * @param other The existing instance to copy.
     */
    private Builder(com.pickme.events.trip.trip_ended.FinalTripFare other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.promotion)) {
        this.promotion = data().deepCopy(fields()[0].schema(), other.promotion);
        fieldSetFlags()[0] = true;
      }
      this.promotionBuilder = null;
      if (isValidValue(fields()[1], other.auto_payment)) {
        this.auto_payment = data().deepCopy(fields()[1].schema(), other.auto_payment);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.additional_fare)) {
        this.additional_fare = data().deepCopy(fields()[2].schema(), other.additional_fare);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.final_trip_fare)) {
        this.final_trip_fare = data().deepCopy(fields()[3].schema(), other.final_trip_fare);
        fieldSetFlags()[3] = true;
      }
    }

    /**
      * Gets the value of the 'promotion' field.
      * @return The value.
      */
    public com.pickme.events.trip.trip_ended.Promotion getPromotion() {
      return promotion;
    }

    /**
      * Sets the value of the 'promotion' field.
      * @param value The value of 'promotion'.
      * @return This builder.
      */
    public com.pickme.events.trip.trip_ended.FinalTripFare.Builder setPromotion(com.pickme.events.trip.trip_ended.Promotion value) {
      validate(fields()[0], value);
      this.promotionBuilder = null;
      this.promotion = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'promotion' field has been set.
      * @return True if the 'promotion' field has been set, false otherwise.
      */
    public boolean hasPromotion() {
      return fieldSetFlags()[0];
    }

    /**
     * Gets the Builder instance for the 'promotion' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.pickme.events.trip.trip_ended.Promotion.Builder getPromotionBuilder() {
      if (promotionBuilder == null) {
        if (hasPromotion()) {
          setPromotionBuilder(com.pickme.events.trip.trip_ended.Promotion.newBuilder(promotion));
        } else {
          setPromotionBuilder(com.pickme.events.trip.trip_ended.Promotion.newBuilder());
        }
      }
      return promotionBuilder;
    }

    /**
     * Sets the Builder instance for the 'promotion' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.pickme.events.trip.trip_ended.FinalTripFare.Builder setPromotionBuilder(com.pickme.events.trip.trip_ended.Promotion.Builder value) {
      clearPromotion();
      promotionBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'promotion' field has an active Builder instance
     * @return True if the 'promotion' field has an active Builder instance
     */
    public boolean hasPromotionBuilder() {
      return promotionBuilder != null;
    }

    /**
      * Clears the value of the 'promotion' field.
      * @return This builder.
      */
    public com.pickme.events.trip.trip_ended.FinalTripFare.Builder clearPromotion() {
      promotion = null;
      promotionBuilder = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'auto_payment' field.
      * @return The value.
      */
    public java.util.List<com.pickme.events.trip.trip_ended.AutoPayment> getAutoPayment() {
      return auto_payment;
    }

    /**
      * Sets the value of the 'auto_payment' field.
      * @param value The value of 'auto_payment'.
      * @return This builder.
      */
    public com.pickme.events.trip.trip_ended.FinalTripFare.Builder setAutoPayment(java.util.List<com.pickme.events.trip.trip_ended.AutoPayment> value) {
      validate(fields()[1], value);
      this.auto_payment = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'auto_payment' field has been set.
      * @return True if the 'auto_payment' field has been set, false otherwise.
      */
    public boolean hasAutoPayment() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'auto_payment' field.
      * @return This builder.
      */
    public com.pickme.events.trip.trip_ended.FinalTripFare.Builder clearAutoPayment() {
      auto_payment = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'additional_fare' field.
      * @return The value.
      */
    public java.util.List<com.pickme.events.trip.trip_ended.AdditionalFare> getAdditionalFare() {
      return additional_fare;
    }

    /**
      * Sets the value of the 'additional_fare' field.
      * @param value The value of 'additional_fare'.
      * @return This builder.
      */
    public com.pickme.events.trip.trip_ended.FinalTripFare.Builder setAdditionalFare(java.util.List<com.pickme.events.trip.trip_ended.AdditionalFare> value) {
      validate(fields()[2], value);
      this.additional_fare = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'additional_fare' field has been set.
      * @return True if the 'additional_fare' field has been set, false otherwise.
      */
    public boolean hasAdditionalFare() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'additional_fare' field.
      * @return This builder.
      */
    public com.pickme.events.trip.trip_ended.FinalTripFare.Builder clearAdditionalFare() {
      additional_fare = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'final_trip_fare' field.
      * @return The value.
      */
    public java.lang.Float getFinalTripFare() {
      return final_trip_fare;
    }

    /**
      * Sets the value of the 'final_trip_fare' field.
      * @param value The value of 'final_trip_fare'.
      * @return This builder.
      */
    public com.pickme.events.trip.trip_ended.FinalTripFare.Builder setFinalTripFare(float value) {
      validate(fields()[3], value);
      this.final_trip_fare = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'final_trip_fare' field has been set.
      * @return True if the 'final_trip_fare' field has been set, false otherwise.
      */
    public boolean hasFinalTripFare() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'final_trip_fare' field.
      * @return This builder.
      */
    public com.pickme.events.trip.trip_ended.FinalTripFare.Builder clearFinalTripFare() {
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public FinalTripFare build() {
      try {
        FinalTripFare record = new FinalTripFare();
        if (promotionBuilder != null) {
          record.promotion = this.promotionBuilder.build();
        } else {
          record.promotion = fieldSetFlags()[0] ? this.promotion : (com.pickme.events.trip.trip_ended.Promotion) defaultValue(fields()[0]);
        }
        record.auto_payment = fieldSetFlags()[1] ? this.auto_payment : (java.util.List<com.pickme.events.trip.trip_ended.AutoPayment>) defaultValue(fields()[1]);
        record.additional_fare = fieldSetFlags()[2] ? this.additional_fare : (java.util.List<com.pickme.events.trip.trip_ended.AdditionalFare>) defaultValue(fields()[2]);
        record.final_trip_fare = fieldSetFlags()[3] ? this.final_trip_fare : (java.lang.Float) defaultValue(fields()[3]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<FinalTripFare>
    WRITER$ = (org.apache.avro.io.DatumWriter<FinalTripFare>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<FinalTripFare>
    READER$ = (org.apache.avro.io.DatumReader<FinalTripFare>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
